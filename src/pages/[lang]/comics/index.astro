---
import BaseLayout from "../../../layouts/BaseLayout.astro";
import Header from "../../../components/Header.astro";
import Footer from "../../../components/Footer.astro";
import StoryFilter from "../../../components/StoryFilter.astro";
import FilterableStoryList from "../../../components/FilterableStoryList.astro";
import { t, LOCALES } from "../../../i18n";
import { getCollection } from 'astro:content';

export function getStaticPaths() {
  return LOCALES.map((lang) => ({ params: { lang } }));
}

const { lang } = Astro.params;
const _ = (k: any) => t(lang, k);

// Get all comics for this language
const allComics = await getCollection('stories', (entry) => 
  entry.data.lang === lang && entry.data.type === 'comic'
);

// Group comics by series (taleid) for counting
const seriesGroups = new Map<string, any[]>();
for (const comic of allComics) {
  const taleid = comic.data.taleid || comic.id;
  if (!seriesGroups.has(taleid)) {
    seriesGroups.set(taleid, []);
  }
  seriesGroups.get(taleid)!.push(comic);
}

const totalSeries = seriesGroups.size;
const totalComics = allComics.length;

// Get URL parameters for initial filter state
const url = Astro.url;
const searchParams = url.searchParams;
const currentGenre = searchParams.get('genre') || 'all';
const currentSort = searchParams.get('sort') || 'date';
const currentSearch = searchParams.get('search') || '';
const currentGrouped = searchParams.get('grouped') || 'true';
---

<BaseLayout 
  title={`${_('nav.comics')} â€” Tale`} 
  description={_('pages.comics.description')}
  lang={lang}
>
  <Header lang={lang} />

  <!-- Hero Section -->
  <section class="relative bg-gradient-to-br from-purple-600 via-purple-700 to-indigo-800 dark:from-purple-800 dark:via-purple-900 dark:to-gray-900 transition-colors duration-300">
    <!-- Background Pattern -->
    <div class="absolute inset-0 opacity-10">
      <svg class="w-full h-full" viewBox="0 0 100 100" xmlns="http://www.w3.org/2000/svg">
        <defs>
          <pattern id="comicPattern" x="0" y="0" width="20" height="20" patternUnits="userSpaceOnUse">
            <rect x="2" y="2" width="16" height="16" fill="none" stroke="currentColor" stroke-width="0.5" rx="2"/>
            <path d="M6,8 Q10,4 14,8 Q10,12 6,8" fill="currentColor" opacity="0.3"/>
          </pattern>
        </defs>
        <rect x="0" y="0" width="100" height="100" fill="url(#comicPattern)"/>
      </svg>
    </div>
    
    <div class="relative max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-20">
      <div class="text-center">
        <h1 class="text-5xl md:text-6xl font-bold text-white mb-6 tracking-tight">
          {_('nav.comics')}
        </h1>
        <p class="text-xl text-purple-100 mb-8 max-w-3xl mx-auto leading-relaxed">
          {_('pages.comics.intro')}
        </p>
        <div class="flex justify-center">
          <div class="bg-white/10 backdrop-blur-sm rounded-full px-6 py-3 text-white font-medium">
            <span id="comic-count">
              {totalSeries} {_('common.seriesAvailable')}
            </span>
            <span id="comic-count-individual" style="display: none;">
              {totalComics} {_('common.comicsAvailable')}
            </span>
          </div>
        </div>
      </div>
    </div>
  </section>

  <!-- Main Content -->
  <main class="bg-white dark:bg-gray-900 transition-colors duration-300">
    <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-12">
      
      <!-- Filter Controls -->
      <StoryFilter 
        lang={lang}
        currentGenre={currentGenre}
        currentSort={currentSort}
        currentSearch={currentSearch}
        currentGrouped={currentGrouped}
      />

      <!-- Comics List -->
      <FilterableStoryList 
        stories={allComics}
        lang={lang}
        showType="comics"
      />

      {allComics.length === 0 && (
        <div class="text-center py-16">
          <div class="max-w-md mx-auto">
            <svg class="mx-auto h-16 w-16 text-gray-400 mb-6" fill="currentColor" viewBox="0 0 24 24">
              <path d="M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm-5 14H7v-2h7v2zm3-4H7v-2h10v2zm0-4H7V7h10v2z"/>
            </svg>
            <h3 class="text-lg font-medium text-gray-900 dark:text-gray-100 mb-2">
              {_('common.noComicsAvailable')}
            </h3>
            <p class="text-gray-500 dark:text-gray-400">
              {_('common.comeBackSoonComics')}
            </p>
          </div>
        </div>
      )}

    </div>
  </main>

  <Footer lang={lang} />
</BaseLayout>
